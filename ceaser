#include <cs50.h>
#include <stdio.h>
#include <string.h>
#include <ctype.h>
#include <stdlib.h>

// prototypes
char upperalphabet[] = {'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'};
char loweralphabet[] = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'};
bool only_digits(string s);
char rotate(char c, int x);


// implementation

int main(int argc, string argv[])
{

    if (argc < 2 || argc > 2)
    {

        printf("Usage: ./caesar key\n");

        return 1;
    }
    else if (argc == 2)
    {
        // true or false funct.
        only_digits(argv[1]);

        // converts string argument to an int assuming its an int
        int num = atoi(argv[1]);

        //get user string input to encrypt
        string plaintext = get_string("plaintext: ");

        //set key as the increment
        int x = num;

        //store the length of the plaintext
        int str = strlen(plaintext);

        //declare variables
       char letter[str];

        // iterate through the plaintext
        for (int i = 0; i < str; i++)
        {
            //call rotate function
              letter[i]= rotate(plaintext[i], x);


        }printf("ciphertext: %s\n", (string
        )letter);



    }return 0;
}

// rules of the functions


            // ROTATE FUNCTION
char rotate(char c, int x)
{


    // see if c is a character
    if (isalpha(c))
    {
        if(isupper(c))
        {
            c -= 65;
            c = (c + x) % 26;
          char result = upperalphabet[(int)c];

        return result;
        }

        else if (islower(c))
        {
            c -= 97;
            c = (c + x) % 26;
            char result = loweralphabet[(int)c];
            return result;
        }

        return 0;
    }
        //if c in not a character value
    else
    {

        return c;

    }

}

    //BOOLEAN FUNCTION
bool only_digits(string s)
{

    int len = strlen(s);

    for (int i = 0; i < len; i++)
    {

        if (isdigit(s[i]))
        {

            return true;
        }

        else
        {

            printf("Usage: ./caesar key\n");

            return 1;
        }
    }
    return 0;
}
